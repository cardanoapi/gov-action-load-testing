{"name": "test_dreps_vote_committee_update", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <cardano_node_tests.tests.tests_conway.test_mass_abstain.TestMassAbstain object at 0x7fffe5384400>\npool_users = [PoolUser(payment=AddressRecord(address='addr_test1qzpgpl3uv44met25cht6mu20v0685k9z92d62a9rt20d549nep38ycs2svyrx8czd3r...ser_addr5_stake.vkey'), skey_file=PosixPath('test_dreps_abstain_delegation_ci0_jbp_pool_user_addr5_stake.skey'))), ...]\ncluster = <ClusterLib: protocol=cardano, command_era=conway>\npayment_addr = AddressRecord(address='addr_test1vpx79dsuzkl95m26j3pn739pr9j8wszw5gq323z3qzjgnac40tw0p', vkey_file=PosixPath('drep_addr_test_register_drep_ci0_how.vkey'), skey_file=PosixPath('drep_addr_test_register_drep_ci0_how.skey'))\n\n    @allure.link(helpers.get_vcs_link())\n    @pytest.mark.testnets\n    @pytest.mark.load_test\n    def test_dreps_vote_committee_update(self,\n        pool_users: clusterlib.PoolUser,\n        cluster: clusterlib.ClusterLib,\n        payment_addr: clusterlib.AddressRecord,\n        ):\n        \"\"\"Test delegated DReps vote on an update committee action.\n    \n        * create an udpate committee action\n        * 10 registered DReps and 3 SPOs cast vote\n        * check that the action is ratified\n        \"\"\"\n        delegatees = pool_users[-10:]\n        pool_user = pool_users[0]\n    \n        pool_user_amount = cluster.g_query.get_address_balance(pool_user.payment.address)\n        assert pool_user_amount, \"Pool user has 0 balance\"\n    \n        # check delegatees have balance\n        for delegatee in delegatees:\n            amount = cluster.g_query.get_address_balance(delegatee.payment.address)\n            assert amount, \"Delegatee has 0 balance\"\n    \n        temp_template = common.get_test_id(cluster)\n        deposit_amt = cluster.conway_genesis[\"govActionDeposit\"]\n        prev_action_rec = governance_utils.get_prev_action(\n            action_type=governance_utils.PrevGovActionIds.COMMITTEE,\n            gov_state=cluster.g_conway_governance.query.gov_state(),\n        )\n        cc_size = 7\n        threshold = \"2/3\"\n        cc_auth_records = [\n            governance_utils.get_cc_member_auth_record(\n                cluster_obj=cluster,\n                name_template=f\"{temp_template}_{i}\",\n            )\n            for i in range(1, cc_size + 1)\n        ]\n        cc_members = [\n            clusterlib.CCMember(\n                epoch=10_000,\n                cold_vkey_file=r.cold_key_pair.vkey_file,\n                cold_skey_file=r.cold_key_pair.skey_file,\n                hot_vkey_file=r.hot_key_pair.vkey_file,\n                hot_skey_file=r.hot_key_pair.skey_file,\n            )\n            for r in cc_auth_records\n        ]\n    \n        reqc.cip031a_01.start(url=helpers.get_vcs_link())\n        update_action = cluster.g_conway_governance.action.update_committee(\n                action_name=f\"{temp_template}\",\n                deposit_amt=deposit_amt,\n                anchor_url=f\"http://www.cc-threshold-update.com\",\n                anchor_data_hash=\"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\",\n                threshold=threshold,\n                add_cc_members = cc_members,\n                prev_action_txid=prev_action_rec.txid,\n                prev_action_ix=prev_action_rec.ix,\n                deposit_return_stake_vkey_file=pool_user.stake.vkey_file,\n            )\n        reqc.cip031a_01.success()\n        tx_file = clusterlib.TxFiles(\n            certificate_files=[r.auth_cert for r in cc_auth_records],\n            proposal_files = [update_action.action_file],\n            signing_key_files  = [\n                *[r.cold_key_pair.skey_file for r in cc_auth_records],\n            ] + [pool_user.payment.skey_file, payment_addr.skey_file]\n        )\n        if conway_common.is_in_bootstrap(cluster_obj=cluster):\n            with pytest.raises((clusterlib.CLIError, submit_api.SubmitApiError)) as excinfo:\n                clusterlib_utils.build_and_submit_tx(\n                    cluster_obj=cluster,\n                    name_template=f\"{temp_template}_bootstrap\",\n                    src_address=payment_addr.address,\n                    tx_files=tx_file,\n                    deposit=deposit_amt,\n                )\n            err_str = str(excinfo.value)\n            assert \"(DisallowedProposalDuringBootstrap\" in err_str, err_str\n            return\n        reqc.cip007.start(url=helpers.get_vcs_link())\n        tx_output = clusterlib_utils.build_and_submit_tx(\n                cluster_obj=cluster,\n                name_template=temp_template,\n                src_address=payment_addr.address,\n                tx_files=tx_file,\n                deposit=deposit_amt,\n            )\n        out_utxo = cluster.g_query.get_utxo(tx_raw_output=tx_output)\n        assert (\n                clusterlib.filter_utxos(utxos=out_utxo, address=payment_addr.address)[0].amount\n                == clusterlib.calculate_utxos_balance(tx_output.txins) - tx_output.fee - deposit_amt\n            ), f\"Incorrect balance for source address `{pool_user.payment.address}`\"\n        action_txid = cluster.g_transaction.get_txid(tx_body_file=tx_output.out_file)\n        gov_state = cluster.g_conway_governance.query.gov_state()\n        prop = governance_utils.lookup_proposal(gov_state=gov_state, action_txid=action_txid)\n        assert prop, \"Update committee action not found\"\n        assert (\n                    prop[\"proposalProcedure\"][\"govAction\"][\"tag\"]\n                    == governance_utils.ActionTags.UPDATE_COMMITTEE.value\n                ), \"Incorrect action tag\"\n        cc_key_hashes = {f\"keyHash-{c.key_hash}\" for c in cc_auth_records}\n        prop_cc_key_hashes = set(prop[\"proposalProcedure\"][\"govAction\"][\"contents\"][2].keys())\n        assert cc_key_hashes == prop_cc_key_hashes, \"Incorrect CC key hashes\"\n    \n        # dreps cast vote\n    \n        # Get the current script's directory\n        script_dir = pl.Path(__file__).parent\n        # Define the relative path for drep_certs\n        drep_cred_path = script_dir / \"../drep_certs\"\n    \n        drep_vkey_files = list(drep_cred_path.glob(\"*.vkey\"))\n        drep_skey_files = list(drep_cred_path.glob(\"*.skey\"))\n        dreps = json.loads(helpers.run_command(\"cardano-cli conway query drep-state --all-dreps --testnet-magic 42\"))\n        drep_votes = []\n        for i in range(len(dreps)):\n            drep_votes.append(cluster.g_conway_governance.vote.create_drep(\n                vote_name = f\"{temp_template}_{action_txid}_drep_vote_{i}\",\n                action_txid =  action_txid,\n                action_ix = 0,\n                vote = clusterlib.Votes.YES,\n>               drep_vkey_file = drep_vkey_files[i]\n            ))\nE           IndexError: list index out of range\n\n/home/rishav/cardano-node-tests/cardano_node_tests/tests/tests_conway/test_mass_abstain.py:509: IndexError"}, "description": "Test delegated DReps vote on an update committee action.\n\n        * create an udpate committee action\n        * 10 registered DReps and 3 SPOs cast vote\n        * check that the action is ratified\n        ", "start": 1721029909205, "stop": 1721029917247, "uuid": "22a01bbf-faf2-4379-85fc-c2294f9c1714", "historyId": "a13a4e1395089abc230e13a910cdd617", "testCaseId": "a13a4e1395089abc230e13a910cdd617", "fullName": "cardano_node_tests.tests.tests_conway.test_mass_abstain.TestMassAbstain#test_dreps_vote_committee_update", "labels": [{"name": "tag", "value": "load_test"}, {"name": "tag", "value": "testnets"}, {"name": "parentSuite", "value": "cardano_node_tests.tests.tests_conway"}, {"name": "suite", "value": "test_mass_abstain"}, {"name": "subSuite", "value": "TestMassAbstain"}, {"name": "host", "value": "office"}, {"name": "thread", "value": "760468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cardano_node_tests.tests.tests_conway.test_mass_abstain"}], "links": [{"type": "link", "url": "https://github.com/IntersectMBO/cardano-node-tests/blob/38c622eea5d0d14cb8e45688f3f3465ff8772852/cardano_node_tests/tests/tests_conway/test_mass_abstain.py#L384", "name": "https://github.com/IntersectMBO/cardano-node-tests/blob/38c622eea5d0d14cb8e45688f3f3465ff8772852/cardano_node_tests/tests/tests_conway/test_mass_abstain.py#L384"}]}